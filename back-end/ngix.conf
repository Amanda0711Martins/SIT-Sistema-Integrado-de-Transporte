# nginx.conf
server {
    listen 80;
    server_name api.logistica.com;

    # Redirecionar HTTP para HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.logistica.com;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Configurações de buffer e timeout
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;

    # Headers de segurança
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Configuração de rate limit
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

    # Endpoint de health check
    location /health {
        access_log off;
        return 200 "API Gateway is running";
    }

    # Roteamento para o microsserviço de Cliente - v1
    location /api/v1/clientes {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://cliente-service:8080/api/v1/clientes;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Roteamento para o microsserviço Operacional - v1
    location /api/v1/operacional {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://operacional-service:8081/api/v1/operacional;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Roteamento para o microsserviço Financeiro - v1
    location /api/v1/financeiro {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://financeiro-service:8082/api/v1/financeiro;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Roteamento para o microsserviço de RH - v1
    location /api/v1/rh {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://rh-service:8083/api/v1/rh;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Endpoint de autenticação
    location /api/v1/auth {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://auth-service:8090/api/v1/auth;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend - interface web
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Tratamento de erros
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}